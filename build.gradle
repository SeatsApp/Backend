plugins {
	// Spring
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'

	// Sonarcloud
	id "org.sonarqube" version "3.3"

	id 'java'

	//pmd
	id 'pmd'

	//checkstyle
	id 'checkstyle'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//Checkstyle
	implementation 'com.puppycrawl.tools:checkstyle:10.1'

	//Lombok
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'

	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

// Sonarcloud
sonarqube {
	properties {
		property "sonar.projectKey", "SeatsApp_Backend"
		property "sonar.organization", "seatsapp"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

//pmd
pmd {
	ruleSetConfig = rootProject.resources.text.fromFile('config/ruleset.xml')
	ignoreFailures = false
}

// CheckStyle
checkstyle {
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
	configProperties = [samedir: "${rootDir}"]

}

tasks.named('test') {
	useJUnitPlatform()
}
