plugins {
	// Spring
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'

	// Sonarcloud
	id "org.sonarqube" version "3.3"

	// Jacoco for sending code coverage to Sonarcloud
	id 'jacoco'

	id 'java'

	//pmd
	id 'pmd'

	//checkstyle
	id 'checkstyle'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '18'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Checkstyle
	implementation 'com.puppycrawl.tools:checkstyle:10.1'

	// Lombok
	compileOnly 'org.projectlombok:lombok:1.18.24'
	annotationProcessor 'org.projectlombok:lombok:1.18.24'
	testCompileOnly 'org.projectlombok:lombok:1.18.24'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Oauth 2 for Azure AD
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Jwt token
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor'

	// Azure AD
	implementation 'com.azure.spring:spring-cloud-azure-starter-active-directory'

	// Spring Security Test
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.6.3'


	// H2 Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.4.Final'
}

// Azure AD
ext {
	set('springCloudAzureVersion', "4.0.0")
}
dependencyManagement {
	imports {
		mavenBom "com.azure.spring:spring-cloud-azure-dependencies:${springCloudAzureVersion}"
	}
}

// Sonarcloud
sonarqube {
	properties {
		property "sonar.projectKey", "SeatsApp_Backend"
		property "sonar.organization", "seatsapp"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
	}
}

jacoco {
	toolVersion = "0.8.8"
}

// Jacoco for sending code coverage to sonarcloud
jacocoTestReport {
	reports {
		xml.enabled true
	}
}
test.finalizedBy jacocoTestReport
tasks.named('sonarqube').configure {
	dependsOn test
}

//pmd
pmd {
	ruleSetConfig = rootProject.resources.text.fromFile('config/ruleset.xml')
	ruleSets = []
	ignoreFailures = false
}

// CheckStyle
checkstyle {
	configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
	configProperties = [samedir: "${rootDir}"]
}

tasks.named('test') {
	useJUnitPlatform()
}
